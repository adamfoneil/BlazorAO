@page "/Setup/PayPeriods"
@inject DapperCX<int, UserProfile> Data
@attribute [Authorize]

<h3>Pay Periods</h3>

<ErrorMessage @ref="error"/>

<div class="mb-2 d-flex align-items-center">
    <RadzenButton Icon="add_circle_outline" Text="Add" Click="InsertRow" />
</div>

<RadzenGrid TItem="PayPeriodsResult" Data="data" RowCreate="SaveRow" RowUpdate="SaveRow" @ref="grid">
	<Columns>

        <RadzenGridColumn TItem="PayPeriodsResult" Title="Start Date" Property="StartDate">
            <Template Context="pp">
                <span>@pp.StartDate.ToString("ddd M/d")</span>
            </Template>
        </RadzenGridColumn>

		<RadzenGridColumn TItem="PayPeriodsResult" Title="End Date" Property="EndDate">
            <Template Context="pp">
                <span>@pp.EndDate.ToString("ddd M/d")</span>
            </Template>
			<EditTemplate Context="pp">
				<RadzenDatePicker @bind-Value="pp.EndDate"/>
			</EditTemplate>
		</RadzenGridColumn>

        <GridControls Grid="grid" DeleteRow="DeleteRow" TItem="PayPeriodsResult"/>

	</Columns>
</RadzenGrid>

<GitHubLink/>

@code {
    ErrorMessage error;
    IEnumerable<PayPeriodsResult> data;
    RadzenGrid<PayPeriodsResult> grid;

    protected override async Task OnInitializedAsync()
    {
        await RefreshList();
    }

    async Task RefreshList()
    {
        data = await Data.QueryAsync(new Queries.PayPeriods()
        {
            WorkspaceId = Data.User?.WorkspaceId ?? 0
        });
    }

    async Task SaveRow(PayPeriodsResult payPeriod)
    {
        var saveRow = payPeriod.CopyAs<PayPeriod>();
        await Data.TrySaveAsync(saveRow,
            onSuccess: async (id) => await RefreshList(),
            onException: (exc) => error.Message = exc.Message);
    }

    async Task DeleteRow(PayPeriodsResult row) =>
        await Data.TryDeleteAsync<PayPeriod>(row.Id,
            onSuccess: async () => await RefreshList(),
            onException: (exc) => error.Message = exc.Message);

    void InsertRow() => grid.InsertRow(new PayPeriodsResult()
    {        
        WorkspaceId = Data.User?.WorkspaceId ?? 0
    });
}
